amends "package://github.com/emilymclean/pkl-github-actions/releases/download/v1.0.0/pkl-github-actions@1.0.0#/actions.pkl"
import "base.pkl"

name = "Build Docker image"

on = new On {
    push = new Push {
        branches = new Listing {
            "main"
            "develop"
        }
    }
}

permissions = new Mapping {
    ["contents"] = "write"
}

jobs = new Mapping {
    ["version"] = new Job {
        outputs = new Mapping {
            ["version"] = "${{ steps.gitversion.outputs.semVer }}"
            ["major"] = "${{ steps.gitversion.outputs.major }}"
        }
        steps = new Listing {
            base.checkout
            new ActionStep {
                name = "Install GitVersion"
                uses = "gittools/actions/gitversion/setup@v3.0.0"
                with = new Mapping {
                    ["versionSpec"] = "5.x"
                }
            }
            new ActionStep {
                name = "Use GitVersion"
                id = "gitversion"
                uses = "gittools/actions/gitversion/execute@v3.0.0"
                with = new Mapping {
                    ["useConfigFile"] = true
                    ["configFilePath"] = "./gitversion.yml"
                }
            }
            new CommandStep {
                name = "Generate Job Summary"
                run = "echo \"# Version Info\nSemantic Version: ${{ steps.gitversion.outputs.semVer }}\" >> $GITHUB_STEP_SUMMARY"
            }
        }
    }
    ["release"] = new Job {
        needs = new Listing {
            "version"
        }
        `if` = "github.event_name != 'pull_request'"
        permissions = new Mapping {
            ["contents"] = "write"
        }
        outputs = new Mapping {
            ["upload_url"] = "${{ steps.create_release.outputs.upload_url }}"
        }
        steps = new Listing {
            base.checkout
            new ActionStep {
                name = "Create tag for release"
                uses = "rickstaa/action-create-tag@v1"
                with = new Mapping {
                    ["tag"] = "v${{ needs.version.outputs.version }}"
                }
            }
            new ActionStep {
                id = "create_release"
                uses = "softprops/action-gh-release@v2"
                env = new Mapping {
                    ["GITHUB_TOKEN"] = "${{ secrets.GITHUB_TOKEN }}"
                }
                with = new Mapping {
                    ["tag_name"] = "v${{ needs.version.outputs.version }}"
                    ["name"] = "Release ${{ needs.version.outputs.version }}"
                    ["prerelease"] = "${{ github.ref == 'refs/heads/develop' }}"
                }
            }
        }
    }
    ["build"] = new Job {
        needs = new Listing {
            "version"
        }
        permissions = new Mapping {
            ["contents"] = "read"
            ["packages"] = "write"
        }
        steps = new Listing {
            base.checkout
            new CommandStep {
                name = "Lowercase repository name"
                run = """
                echo "REPOSITORY_LC=${REPOSITORY,,}" >> ${GITHUB_ENV}
                """
                env = new Mapping {
                    ["REPOSITORY"] = "${{ github.repository }}"
                }
            }
            new ActionStep {
                name = "Setup QEMU"
                uses = "docker/setup-qemu-action@v3"
            }
            new ActionStep {
                name = "Setup Docker Buildx"
                uses = "docker/setup-buildx-action@v3"
            }
            new ActionStep {
                name = "Log in to the Container registry"
                uses = "docker/login-action@v3"
                with = new Mapping {
                    ["registry"] = "https://ghcr.io"
                    ["username"] = "${{ github.actor }}"
                    ["password"] = "${{ secrets.GITHUB_TOKEN }}"
                }
            }
            ...base.dockerBuild(
                new Mapping {
                    ["context"] = "./"
                    ["platforms"] = "linux/amd64,linux/arm64/v8"
                    ["push"] = true
                    ["tags"] = """
                    ghcr.io/${{ env.REPOSITORY_LC }}:latest
                    ghcr.io/${{ env.REPOSITORY_LC }}:nightly
                    ghcr.io/${{ env.REPOSITORY_LC }}:${{ needs.version.outputs.major }}-nightly
                    ghcr.io/${{ env.REPOSITORY_LC }}:${{ needs.version.outputs.major }}-latest
                    ghcr.io/${{ env.REPOSITORY_LC }}:${{ needs.version.outputs.version }}
                    """
                },
                "github.ref == 'refs/heads/main'"
            )
            ...base.dockerBuild(
                new Mapping {
                    ["context"] = "./"
                    ["platforms"] = "linux/amd64,linux/arm64/v8"
                    ["push"] = true
                    ["tags"] = """
                    ghcr.io/${{ env.REPOSITORY_LC }}:nightly
                    ghcr.io/${{ env.REPOSITORY_LC }}:${{ needs.version.outputs.major }}-nightly
                    ghcr.io/${{ env.REPOSITORY_LC }}:${{ needs.version.outputs.version }}
                    """
                },
                "github.ref != 'refs/heads/main'"
            )
        }
    }
}.toMap().filter((k,v) -> v != null).toMapping()